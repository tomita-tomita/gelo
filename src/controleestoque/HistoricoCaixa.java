
package controleestoque;

import control.GeradorSQL;
import control.GerenciadorDeDados;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Eduardo Tomita
 */
public class HistoricoCaixa extends javax.swing.JFrame {

    /**
     * Creates new form HistoricoCaixa
     */
    public HistoricoCaixa() {
        initComponents();   
        URL url = this.getClass().getResource("/imagens/Icone.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        jTextFieldTotalMovimentacaoCaixa.setEditable(false);
        jTextFieldTotalMovimentacaoCaixaEntrada.setEditable(false);
        jTextFieldSaida.setEditable(false);           
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBoxHistoricoMes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jFormattedTextHistoricoDia = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldHistoricoDiaDe = new javax.swing.JFormattedTextField();
        jFormattedTextFieldHistoricoDiaPara = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldTotalMovimentacaoCaixaEntrada = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldSaida = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTotalMovimentacaoCaixa = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHistóricoMovimentacao = new javax.swing.JTable();

        jComboBoxHistoricoMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleciona um mês", "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        jComboBoxHistoricoMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHistoricoMesActionPerformed(evt);
            }
        });

        jLabel1.setText("Mês");

        jLabel2.setText("Dia");

        try {
            jFormattedTextHistoricoDia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel3.setText("Intervalo de dias");

        try {
            jFormattedTextFieldHistoricoDiaDe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldHistoricoDiaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldHistoricoDiaDeActionPerformed(evt);
            }
        });

        try {
            jFormattedTextFieldHistoricoDiaPara.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldHistoricoDiaPara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldHistoricoDiaParaActionPerformed(evt);
            }
        });

        jButton2.setText("Total até o momento");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Dia atual");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("até");

        jTextFieldTotalMovimentacaoCaixaEntrada.setForeground(new java.awt.Color(0, 51, 255));
        jTextFieldTotalMovimentacaoCaixaEntrada.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotalMovimentacaoCaixaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTotalMovimentacaoCaixaEntradaActionPerformed(evt);
            }
        });

        jLabel6.setText("Total de entradas");

        jLabel5.setText("Total de saidas");

        jTextFieldSaida.setForeground(new java.awt.Color(255, 0, 0));
        jTextFieldSaida.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSaidaActionPerformed(evt);
            }
        });

        jLabel7.setText("Total final");

        jTextFieldTotalMovimentacaoCaixa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTotalMovimentacaoCaixa.setToolTipText("");

        jButton4.setText("Pesquisar por Dia");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Pesquisar por intervalo de dias");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTotalMovimentacaoCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jFormattedTextFieldHistoricoDiaDe, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4))
                                    .addComponent(jTextFieldTotalMovimentacaoCaixaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jFormattedTextFieldHistoricoDiaPara, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                            .addComponent(jTextFieldSaida))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton5)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxHistoricoMes, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextHistoricoDia, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxHistoricoMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextHistoricoDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextFieldHistoricoDiaDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextFieldHistoricoDiaPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotalMovimentacaoCaixaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldTotalMovimentacaoCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTableHistóricoMovimentacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo movimentação", "Valor", "Descrição", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableHistóricoMovimentacao);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxHistoricoMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHistoricoMesActionPerformed
        GeradorSQL geradorSQL = new GeradorSQL();
        try {
            String mes = String.valueOf(jComboBoxHistoricoMes.getSelectedIndex());
            jTextFieldTotalMovimentacaoCaixa.setText(geradorSQL.consultaSaldoCaixaMes(mes));            
            jTextFieldTotalMovimentacaoCaixaEntrada.setText(geradorSQL.consultaSaldoCaixaMesES(mes, "ENTRADA"));
            jTextFieldSaida.setText(geradorSQL.consultaSaldoCaixaMesES(mes, "SAIDA"));
            if(geradorSQL.consultaSaldoCaixaMes(mes) != null){
                if(Float.parseFloat(jTextFieldTotalMovimentacaoCaixa.getText()) > 0){
                    jTextFieldTotalMovimentacaoCaixa.setForeground(Color.BLUE);
                }else{
                    jTextFieldTotalMovimentacaoCaixa.setForeground(Color.RED);
                }        
            }else{
                if(jComboBoxHistoricoMes.getSelectedIndex() > 0){
                    mes = String.valueOf(jComboBoxHistoricoMes.getSelectedItem());
                    JOptionPane.showMessageDialog(null, "Nenhuma movimentação realizada em "+ mes +" .", null, JOptionPane.NO_OPTION);
                }
            }
            String comandoWhere = " where data like '%-0"+ mes +"-%' order by data;";
            jTableHistóricoMovimentacao.setModel(geradorSQL.getMovimentacao(comandoWhere));
        } catch (SQLException ex){
            Logger.getLogger(MovimentacaoEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBoxHistoricoMesActionPerformed

    private void jFormattedTextFieldHistoricoDiaParaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHistoricoDiaParaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldHistoricoDiaParaActionPerformed

    private void jFormattedTextFieldHistoricoDiaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHistoricoDiaDeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldHistoricoDiaDeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        GeradorSQL geradorSQL = new GeradorSQL();
        try {
        jTextFieldTotalMovimentacaoCaixa.setText(geradorSQL.consultaSaldoCaixa());
        jTextFieldTotalMovimentacaoCaixaEntrada.setText(geradorSQL.consultaSaldoCaixaDiario("ENTRADA"));
        jTextFieldSaida.setText(geradorSQL.consultaSaldoCaixaDiario("SAIDA"));
        String data = (new java.text.SimpleDateFormat("yyy-MM-dd").format(new java.util.Date(System.currentTimeMillis())));      
        String comandoWhere = " WHERE data like '%"+ data +"%' order by data;";
        jTableHistóricoMovimentacao.setModel(geradorSQL.getMovimentacao(comandoWhere));
        if(geradorSQL.consultaSaldoCaixa() != null){
            if(Float.parseFloat(jTextFieldTotalMovimentacaoCaixa.getText()) > 0){
                jTextFieldTotalMovimentacaoCaixa.setForeground(Color.BLUE);
            }else{
                jTextFieldTotalMovimentacaoCaixa.setForeground(Color.RED);
            }
        }else{
            jTextFieldTotalMovimentacaoCaixa.setText("0.00");
            jTextFieldTotalMovimentacaoCaixaEntrada.setText("0.00");
            jTextFieldSaida.setText("0.00");
            JOptionPane.showMessageDialog(null, "Nenhuma movimentação realizada hoje.", null, JOptionPane.NO_OPTION);
        }
        } catch (SQLException ex){
            
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        GeradorSQL geradorSQL = new GeradorSQL();
        try {
            jTextFieldTotalMovimentacaoCaixa.setText(geradorSQL.consultaSaldoCaixaTotal());
            jTextFieldTotalMovimentacaoCaixaEntrada.setText(geradorSQL.consultaTotalEntradas());
            jTextFieldSaida.setText(geradorSQL.consultaTotalSaidas());
            String comandoWhere = " order by data";
            jTableHistóricoMovimentacao.setModel(geradorSQL.getMovimentacao(comandoWhere)); 
            if(Float.parseFloat(jTextFieldTotalMovimentacaoCaixa.getText()) > 0){
                jTextFieldTotalMovimentacaoCaixa.setForeground(Color.BLUE);
            }else{
                jTextFieldTotalMovimentacaoCaixa.setForeground(Color.RED);
            }        
        } catch (SQLException ex){
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldTotalMovimentacaoCaixaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTotalMovimentacaoCaixaEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTotalMovimentacaoCaixaEntradaActionPerformed

    private void jTextFieldSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSaidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSaidaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        GeradorSQL geradorSQL = new GeradorSQL();        
        String[] array  = jFormattedTextHistoricoDia.getText().split("/");
        String data = array[2]+"-"+array[1]+"-"+array[0];
        try{
            if(geradorSQL.consultaSaldoCaixaDia(data) != null){
                jTextFieldTotalMovimentacaoCaixa.setText(geradorSQL.consultaSaldoCaixaDia(data));
                if(Float.parseFloat(jTextFieldTotalMovimentacaoCaixa.getText()) > 0){
                    jTextFieldTotalMovimentacaoCaixa.setForeground(Color.BLUE);
                }else{
                    jTextFieldTotalMovimentacaoCaixa.setForeground(Color.RED);
                }
                jTextFieldTotalMovimentacaoCaixaEntrada.setText(geradorSQL.consultaSaldoCaixaDiaES(data, "ENTRADA"));
                jTextFieldSaida.setText(geradorSQL.consultaSaldoCaixaDiaES(data, "SAIDA"));
            }else{
                jTextFieldTotalMovimentacaoCaixa.setText("");
                jTextFieldTotalMovimentacaoCaixaEntrada.setText("");
                jTextFieldSaida.setText("");
                JOptionPane.showMessageDialog(null, "Nenhuma movimentação realizada em "+ jFormattedTextHistoricoDia.getText() +" .", null, JOptionPane.NO_OPTION);
            }            
            String comandoWhere = " where data like '%"+ data +"%'order by data";
            jTableHistóricoMovimentacao.setModel(geradorSQL.getMovimentacao(comandoWhere));            
        } catch (SQLException ex){
            
        }        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        GeradorSQL geradorSQL = new GeradorSQL();        
        String[] arrayInicio  = jFormattedTextFieldHistoricoDiaDe.getText().split("/");
        String dataInicio = arrayInicio[2]+"-"+arrayInicio[1]+"-"+arrayInicio[0];
        String[] arrayFim = jFormattedTextFieldHistoricoDiaPara.getText().split("/");
        String dataFim = arrayFim[2]+"-"+arrayFim[1]+"-"+String.valueOf(Integer.parseInt(arrayFim[0])+1);
        try{
            if(geradorSQL.consultaSaldoCaixaIntervalo(dataInicio, dataFim) != null){
                jTextFieldTotalMovimentacaoCaixa.setText(geradorSQL.consultaSaldoCaixaIntervalo(dataInicio, dataFim));
                if(Float.parseFloat(jTextFieldTotalMovimentacaoCaixa.getText()) > 0){
                    jTextFieldTotalMovimentacaoCaixa.setForeground(Color.BLUE);
                }else{
                    jTextFieldTotalMovimentacaoCaixa.setForeground(Color.RED);
                }
                jTextFieldTotalMovimentacaoCaixaEntrada.setText(geradorSQL.consultaSaldoCaixaIntervaloES(dataInicio, dataFim, "ENTRADA"));
                jTextFieldSaida.setText(geradorSQL.consultaSaldoCaixaIntervaloES(dataInicio, dataFim, "SAIDA"));
            }else{
                jTextFieldTotalMovimentacaoCaixa.setText("");
                jTextFieldTotalMovimentacaoCaixaEntrada.setText("");
                jTextFieldSaida.setText("");
                JOptionPane.showMessageDialog(null, "Nenhuma movimentação realizada.", null, JOptionPane.NO_OPTION);
            }            
            String comandoWhere = " where data >= '"+ dataInicio +"' and data <= '"+dataFim+"' order by data";
            jTableHistóricoMovimentacao.setModel(geradorSQL.getMovimentacao(comandoWhere));            
        } catch (SQLException ex){
            
        }         
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBoxHistoricoMes;
    private javax.swing.JFormattedTextField jFormattedTextFieldHistoricoDiaDe;
    private javax.swing.JFormattedTextField jFormattedTextFieldHistoricoDiaPara;
    private javax.swing.JFormattedTextField jFormattedTextHistoricoDia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableHistóricoMovimentacao;
    private javax.swing.JTextField jTextFieldSaida;
    private javax.swing.JTextField jTextFieldTotalMovimentacaoCaixa;
    private javax.swing.JTextField jTextFieldTotalMovimentacaoCaixaEntrada;
    // End of variables declaration//GEN-END:variables
}
